{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DOMAIN_SEPARATOR",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "nonces",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "permit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"DOMAIN_SEPARATOR()": {
					"details": "Return the DOMAIN_SEPARATOR"
				},
				"approve(address,uint256)": {
					"params": {
						"amount": "The maximum collective amount that `spender` can draw.",
						"spender": "Address of the party that can draw from msg.sender's account."
					},
					"returns": {
						"_0": "(bool) Returns True if approved."
					}
				},
				"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
					"params": {
						"deadline": "This permit must be redeemed before this deadline (UTC timestamp in seconds).",
						"owner_": "Address of the owner.",
						"spender": "The address of the spender that gets approved to draw from `owner_`.",
						"value": "The maximum collective amount that `spender` can draw."
					}
				},
				"transfer(address,uint256)": {
					"params": {
						"amount": "of the tokens to move.",
						"to": "The address to move the tokens."
					},
					"returns": {
						"_0": "(bool) Returns True if succeeded."
					}
				},
				"transferFrom(address,address,uint256)": {
					"params": {
						"amount": "The token amount to move.",
						"from": "Address to draw tokens from.",
						"to": "The address to move the tokens."
					},
					"returns": {
						"_0": "(bool) Returns True if succeeded."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"allowance(address,address)": {
					"notice": "owner > spender > allowance mapping."
				},
				"approve(address,uint256)": {
					"notice": "Approves `amount` from sender to be spend by `spender`."
				},
				"balanceOf(address)": {
					"notice": "owner > balance mapping."
				},
				"nonces(address)": {
					"notice": "owner > nonce mapping. Used in `permit`."
				},
				"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
					"notice": "Approves `value` from `owner_` to be spend by `spender`."
				},
				"transfer(address,uint256)": {
					"notice": "Transfers `amount` tokens from `msg.sender` to `to`."
				},
				"transferFrom(address,address,uint256)": {
					"notice": "Transfers `amount` tokens from `from` to `to`. Caller needs approval for `from`."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/bentobox/KashiPairMediumRiskV1.sol": "ERC20"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/bentobox/KashiPairMediumRiskV1.sol": {
			"keccak256": "0xf37ff7488158ae183be078253916cf0632314c2acfbfb9e9a35434b2bc05631e",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://c250cb8f5a1d3b29619fdf6d2cd12a9e35eea88cee58905ed6b2794f0881b40b",
				"dweb:/ipfs/QmYqX9fhBUDg8cQKCL5Lmt26Ek4z1NUmgHn2emdT3Jetzz"
			]
		}
	},
	"version": 1
}