{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes[]",
						"name": "calls",
						"type": "bytes[]"
					},
					{
						"internalType": "bool",
						"name": "revertOnFail",
						"type": "bool"
					}
				],
				"name": "batch",
				"outputs": [
					{
						"internalType": "bool[]",
						"name": "successes",
						"type": "bool[]"
					},
					{
						"internalType": "bytes[]",
						"name": "results",
						"type": "bytes[]"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "permitToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"batch(bytes[],bool)": {
					"params": {
						"calls": "An array of inputs for each call.",
						"revertOnFail": "If True then reverts after a failed call and stops doing further calls."
					},
					"returns": {
						"results": "An array with the returned data of each function call, mapped one-to-one to `calls`.",
						"successes": "An array indicating the success of a call, mapped one-to-one to `calls`."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"batch(bytes[],bool)": {
					"notice": "Allows batched call to self (this contract)."
				},
				"permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
					"notice": "Call wrapper that performs `ERC20.permit` on `token`. Lookup `IERC20.permit`."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/bentobox/BentoBoxV1.sol": "BoringBatchable"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/bentobox/BentoBoxV1.sol": {
			"keccak256": "0xf5251397b9aaa5c66ddc18b0cb96350ffac09f5776a1255fedc0072641f916fe",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://a50ae7838a0c690efa617f439504a524b52db118895aa95e139fb07fb9aa009d",
				"dweb:/ipfs/QmWdWpQ2jmhfE3LUpukU93AD38UNm48tV8WKpGotv34rRa"
			]
		}
	},
	"version": 1
}